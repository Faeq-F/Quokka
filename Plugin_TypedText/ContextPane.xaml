<Page x:Class="Plugin_TypedText.ContextPane"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:quokka="clr-namespace:Quokka;assembly=Quokka"
    
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="800"
    Title="ContextPane"
    KeyDown="Page_KeyDown">
    <Page.Resources>
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                        <!--
                            User editable Styles:

                            ButtonContentMargin: Margin
                        -->
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter Margin="10"></ContentPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!---
            User editable styles:

            ScrollBarBgVisibility: Visibility
            ScrollBarBgColor: Background
            ScrollBarBgRounding: CornerRadius
            ScrollBarBgBorderColor: BorderBrush
            ScrollBarBgBorderThickness: BorderThickness
            ScrollBarBgWidth: Width
            ScrollBarBgMargin: Margin
         -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" CornerRadius="5" Width="10" Margin="-10, 0, -1, 10" BorderBrush="Green" BorderThickness="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
            User Editable Styles:

            ScrollThumbVisibility: Visibility
            ScrollThumbColor: Background
            ScrollThumbRounding: CornerRadius
            ScrollThumbBorderColor: BorderBrush
            ScrollThumbBorderThickness: BorderThickness
            ScrollThumbWidth: Width
            ScrollThumbMargin: Margin
        -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="3" Background="White" BorderBrush="Transparent" BorderThickness="3"  Width="10" Margin="-10,0,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!---
            User editable styles:

            ScrollThumbBgVisibility: Visibility
            ScrollThumbBgColor: Background
            ScrollThumbBgRounding: CornerRadius
            ScrollThumbBgBorderColor: BorderBrush
            ScrollThumbBgBorderThickness: BorderThickness
            ScrollThumbBgWidth: Width
            ScrollThumbBgMargin: Margin
         -->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="5" Background="Black" Width="10" Margin="-10, 0, 0, 0" Visibility="Visible" BorderBrush="Pink" BorderThickness="0"/>
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <!--
        User editable styles:

        BorderColor: BorderBrush
        BorderThickness: BorderThickness
        CornerRounding: CornerRadius
        Background: Background
        MinHeight: MinHeight
    -->
    <Border
        BorderBrush="Black"
        BorderThickness="2"
        CornerRadius="15"
        Background="White"
        MinHeight="64"
        Height="auto"
        Width="auto"
        >

        <!--
            User editable styles:

            ContentMargin: Margin
            ContentVerticalAlignment: VerticalAlignment
            ContentHorizontalAlignment: HorizontalAlignment
            DetailsImageMargin: Margin
            TextColor: Foreground
            TextSize: FontSize
            FontFamily: FontFamily
            TextLineMargin: Margin
            
        -->
        <Grid Margin="0, 0, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>

                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>

            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" HorizontalAlignment="Center"> <!--This is what is referred to by the setting-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>


                <Image Grid.Row="0" x:Name="DetailsImage" Margin="40,50,40,20"/>
                <TextBlock TextWrapping="Wrap" Text="You typed the text after 'You typed:'" Grid.Row="1"
                    Foreground="Black" FontSize="16" FontFamily="Cascadia Code" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
                <TextBlock TextWrapping="Wrap" Text="" Grid.Row="2" x:Name="text" 
                    Foreground="Black" FontSize="16" FontFamily="Cascadia Code" VerticalAlignment="Top" Margin="0,0,0,0"/>


            </Grid>
            <Grid Grid.Column="1">
                <!--
                    User editable styles:

                    ListMargin: Margin
                    ContentHorizontalAlignment: HorizontalContentAlignment
                -->
                <ListView Margin="10,10,0,10" SelectionMode="Single"  KeyboardNavigation.DirectionalNavigation="Cycle" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Left" x:Name="ButtonsListView"
                    Background="Transparent" BorderThickness="0" BorderBrush="Transparent">
                    <ListView.Resources>
                        <Style x:Key="FocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="0" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <!--
                            User editable styles:

                            ListItemBorderThickness: BorderThickness
                            ListItemHoverBorderColor: Item.MouseOver.Border
                            ListItemHoverBgColor: Item.MouseOver.Background
                            ListItemSelectedBorderColor: Item.SelectedInactive.Border & Item.SelectedActive.Border
                            ListItemSelectedBgColor: Item.SelectedInactive.Background & Item.SelectedActive.Background
                            ListItemRounding: CornerRadius
                            ListItemMargin: Margin
                        -->
                        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="LightGray"/>
                        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Black"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="White"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Black"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="White"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Black"/>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="15"/>
                                    <Setter Property="Margin" Value="0, 0, 10, 0"/>
                                </Style>
                            </Style.Resources>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="3"/>
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Padding" Value="4,1"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>

                    <!--
                        User editable styles:

                        ListItemIconSize: Height & Width
                        ListItemIconMargin: Margin
                        ListItemTextPadding: Padding
                        ListItemFont: FontFamily
                        ListItemSize: FontSize
                        ListItemColor: Foreground
                    -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="Copy the text" Padding="10" Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="Another 'Copy the text' button" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="Again, another 'Copy the text' button" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="This one also does the same thing" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="So does this one" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="Do you think there are too many of these?" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="How about another?" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="And another" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="more" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="9*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Image Margin="0,0,-5,0" Source="/Plugin_TypedText;component/copy.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Button Content="Maybe that's it" Padding="10"  Click="CopyText" FontFamily="Cascadia Code" FontSize="12" Foreground="Black" Background="Transparent" BorderThickness="0" Style="{StaticResource TransparentStyle}"/>
                        </Grid>
                    </Grid>
                </ListView>
            </Grid>
        </Grid>
    </Border>
</Page>
