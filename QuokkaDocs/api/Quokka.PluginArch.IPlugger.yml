### YamlMime:ManagedReference
items:
- uid: Quokka.PluginArch.IPlugger
  commentId: T:Quokka.PluginArch.IPlugger
  id: IPlugger
  parent: Quokka.PluginArch
  children:
  - Quokka.PluginArch.IPlugger.OnAppShutdown
  - Quokka.PluginArch.IPlugger.OnAppStartup
  - Quokka.PluginArch.IPlugger.OnQueryChange(System.String)
  - Quokka.PluginArch.IPlugger.OnSearchWindowStartup
  - Quokka.PluginArch.IPlugger.OnSpecialCommand(System.String)
  - Quokka.PluginArch.IPlugger.PluggerName
  - Quokka.PluginArch.IPlugger.SpecialCommands
  langs:
  - csharp
  - vb
  name: IPlugger
  nameWithType: IPlugger
  fullName: Quokka.PluginArch.IPlugger
  type: Interface
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: IPlugger
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 10
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: All plugins must implement this interface.
  example: []
  syntax:
    content: public interface IPlugger
    content.vb: Public Interface IPlugger
- uid: Quokka.PluginArch.IPlugger.PluggerName
  commentId: P:Quokka.PluginArch.IPlugger.PluggerName
  id: PluggerName
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: PluggerName
  nameWithType: IPlugger.PluggerName
  fullName: Quokka.PluginArch.IPlugger.PluggerName
  type: Property
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: PluggerName
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 15
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: The name of the plugin
  example: []
  syntax:
    content: string PluggerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property PluggerName As String
  overload: Quokka.PluginArch.IPlugger.PluggerName*
- uid: Quokka.PluginArch.IPlugger.OnAppShutdown
  commentId: M:Quokka.PluginArch.IPlugger.OnAppShutdown
  id: OnAppShutdown
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: OnAppShutdown()
  nameWithType: IPlugger.OnAppShutdown()
  fullName: Quokka.PluginArch.IPlugger.OnAppShutdown()
  type: Method
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: OnAppShutdown
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 24
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: >-
    This method will run just before the application shuts down,

    i.e., when the user clicks 'exit' in the tray task context menu.

    Useful for any clean-up required.
  example: []
  syntax:
    content: void OnAppShutdown()
    content.vb: Sub OnAppShutdown()
  overload: Quokka.PluginArch.IPlugger.OnAppShutdown*
- uid: Quokka.PluginArch.IPlugger.OnAppStartup
  commentId: M:Quokka.PluginArch.IPlugger.OnAppStartup
  id: OnAppStartup
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: OnAppStartup()
  nameWithType: IPlugger.OnAppStartup()
  fullName: Quokka.PluginArch.IPlugger.OnAppStartup()
  type: Method
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: OnAppStartup
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 34
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: >-
    This method will run just after the application starts up,

    e.g., when the user runs Quokka.exe.

    Useful for any required resource gathering within the appropriate time context;

    there is a OnSearchWindowStartup() method which may be more appropriate for certain tasks.
  example: []
  syntax:
    content: void OnAppStartup()
    content.vb: Sub OnAppStartup()
  overload: Quokka.PluginArch.IPlugger.OnAppStartup*
- uid: Quokka.PluginArch.IPlugger.OnQueryChange(System.String)
  commentId: M:Quokka.PluginArch.IPlugger.OnQueryChange(System.String)
  id: OnQueryChange(System.String)
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: OnQueryChange(string)
  nameWithType: IPlugger.OnQueryChange(string)
  fullName: Quokka.PluginArch.IPlugger.OnQueryChange(string)
  type: Method
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: OnQueryChange
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 47
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: >-
    Runs when the user changes their query in the search window.

    Used to give the user the results they want to see from their query.
  example: []
  syntax:
    content: List<ListItem> OnQueryChange(string query)
    parameters:
    - id: query
      type: System.String
      description: The user's current query
    return:
      type: System.Collections.Generic.List{Quokka.ListItems.ListItem}
      description: >-
        A List of ListItems appropriate for the user's query.

        These will be displayed in the search windows results list
    content.vb: Function OnQueryChange(query As String) As List(Of ListItem)
  overload: Quokka.PluginArch.IPlugger.OnQueryChange*
  nameWithType.vb: IPlugger.OnQueryChange(String)
  fullName.vb: Quokka.PluginArch.IPlugger.OnQueryChange(String)
  name.vb: OnQueryChange(String)
- uid: Quokka.PluginArch.IPlugger.OnSearchWindowStartup
  commentId: M:Quokka.PluginArch.IPlugger.OnSearchWindowStartup
  id: OnSearchWindowStartup
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: OnSearchWindowStartup()
  nameWithType: IPlugger.OnSearchWindowStartup()
  fullName: Quokka.PluginArch.IPlugger.OnSearchWindowStartup()
  type: Method
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: OnSearchWindowStartup
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 56
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: >-
    This method will run just after the search window starts up.

    Useful for any required resource gathering within the appropriate time context;

    there is a OnAppStartup() method which may be more appropriate for certain tasks.
  example: []
  syntax:
    content: void OnSearchWindowStartup()
    content.vb: Sub OnSearchWindowStartup()
  overload: Quokka.PluginArch.IPlugger.OnSearchWindowStartup*
- uid: Quokka.PluginArch.IPlugger.OnSpecialCommand(System.String)
  commentId: M:Quokka.PluginArch.IPlugger.OnSpecialCommand(System.String)
  id: OnSpecialCommand(System.String)
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: OnSpecialCommand(string)
  nameWithType: IPlugger.OnSpecialCommand(string)
  fullName: Quokka.PluginArch.IPlugger.OnSpecialCommand(string)
  type: Method
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: OnSpecialCommand
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 70
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: >-
    Runs when the user changes their query in the search window to

    one of the commands provided by SpecialCommands().

    Used to give the user the results they want to see from the command.
  example: []
  syntax:
    content: List<ListItem> OnSpecialCommand(string command)
    parameters:
    - id: command
      type: System.String
      description: The command the user has entered
    return:
      type: System.Collections.Generic.List{Quokka.ListItems.ListItem}
      description: >-
        A List of ListItems appropriate for the command.

        These will be displayed in the search windows results list
    content.vb: Function OnSpecialCommand(command As String) As List(Of ListItem)
  overload: Quokka.PluginArch.IPlugger.OnSpecialCommand*
  nameWithType.vb: IPlugger.OnSpecialCommand(String)
  fullName.vb: Quokka.PluginArch.IPlugger.OnSpecialCommand(String)
  name.vb: OnSpecialCommand(String)
- uid: Quokka.PluginArch.IPlugger.SpecialCommands
  commentId: M:Quokka.PluginArch.IPlugger.SpecialCommands
  id: SpecialCommands
  parent: Quokka.PluginArch.IPlugger
  langs:
  - csharp
  - vb
  name: SpecialCommands()
  nameWithType: IPlugger.SpecialCommands()
  fullName: Quokka.PluginArch.IPlugger.SpecialCommands()
  type: Method
  source:
    remote:
      path: Quokka/PluginArch/IPlugger.cs
      branch: feature-ContextPanes
      repo: git@github.com:Faeq-F/Quokka.git
    id: SpecialCommands
    path: ../Quokka/PluginArch/IPlugger.cs
    startLine: 83
  assemblies:
  - Quokka
  namespace: Quokka.PluginArch
  summary: >-
    Used to define special commands that should have unique results.

    When one of these commands is entered by the user, OnSpecialCommand(string command) is called.

    ListItems from other plugins will not appear when one of these commands is entered.

    The commands defined should be unique as to NOT CLASH with other plugins.
  example: []
  syntax:
    content: List<string> SpecialCommands()
    return:
      type: System.Collections.Generic.List{System.String}
      description: The special commands; the commands defined should be unique as to NOT CLASH with other plugins.
    content.vb: Function SpecialCommands() As List(Of String)
  overload: Quokka.PluginArch.IPlugger.SpecialCommands*
references:
- uid: Quokka.PluginArch
  commentId: N:Quokka.PluginArch
  href: Quokka.html
  name: Quokka.PluginArch
  nameWithType: Quokka.PluginArch
  fullName: Quokka.PluginArch
  spec.csharp:
  - uid: Quokka
    name: Quokka
    href: Quokka.html
  - name: .
  - uid: Quokka.PluginArch
    name: PluginArch
    href: Quokka.PluginArch.html
  spec.vb:
  - uid: Quokka
    name: Quokka
    href: Quokka.html
  - name: .
  - uid: Quokka.PluginArch
    name: PluginArch
    href: Quokka.PluginArch.html
- uid: Quokka.PluginArch.IPlugger.PluggerName*
  commentId: Overload:Quokka.PluginArch.IPlugger.PluggerName
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_PluggerName
  name: PluggerName
  nameWithType: IPlugger.PluggerName
  fullName: Quokka.PluginArch.IPlugger.PluggerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quokka.PluginArch.IPlugger.OnAppShutdown*
  commentId: Overload:Quokka.PluginArch.IPlugger.OnAppShutdown
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_OnAppShutdown
  name: OnAppShutdown
  nameWithType: IPlugger.OnAppShutdown
  fullName: Quokka.PluginArch.IPlugger.OnAppShutdown
- uid: Quokka.PluginArch.IPlugger.OnAppStartup*
  commentId: Overload:Quokka.PluginArch.IPlugger.OnAppStartup
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_OnAppStartup
  name: OnAppStartup
  nameWithType: IPlugger.OnAppStartup
  fullName: Quokka.PluginArch.IPlugger.OnAppStartup
- uid: Quokka.PluginArch.IPlugger.OnQueryChange*
  commentId: Overload:Quokka.PluginArch.IPlugger.OnQueryChange
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_OnQueryChange_System_String_
  name: OnQueryChange
  nameWithType: IPlugger.OnQueryChange
  fullName: Quokka.PluginArch.IPlugger.OnQueryChange
- uid: System.Collections.Generic.List{Quokka.ListItems.ListItem}
  commentId: T:System.Collections.Generic.List{Quokka.ListItems.ListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ListItem>
  nameWithType: List<ListItem>
  fullName: System.Collections.Generic.List<Quokka.ListItems.ListItem>
  nameWithType.vb: List(Of ListItem)
  fullName.vb: System.Collections.Generic.List(Of Quokka.ListItems.ListItem)
  name.vb: List(Of ListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Quokka.ListItems.ListItem
    name: ListItem
    href: Quokka.ListItems.ListItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quokka.ListItems.ListItem
    name: ListItem
    href: Quokka.ListItems.ListItem.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Quokka.PluginArch.IPlugger.OnSearchWindowStartup*
  commentId: Overload:Quokka.PluginArch.IPlugger.OnSearchWindowStartup
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_OnSearchWindowStartup
  name: OnSearchWindowStartup
  nameWithType: IPlugger.OnSearchWindowStartup
  fullName: Quokka.PluginArch.IPlugger.OnSearchWindowStartup
- uid: Quokka.PluginArch.IPlugger.OnSpecialCommand*
  commentId: Overload:Quokka.PluginArch.IPlugger.OnSpecialCommand
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_OnSpecialCommand_System_String_
  name: OnSpecialCommand
  nameWithType: IPlugger.OnSpecialCommand
  fullName: Quokka.PluginArch.IPlugger.OnSpecialCommand
- uid: Quokka.PluginArch.IPlugger.SpecialCommands*
  commentId: Overload:Quokka.PluginArch.IPlugger.SpecialCommands
  href: Quokka.PluginArch.IPlugger.html#Quokka_PluginArch_IPlugger_SpecialCommands
  name: SpecialCommands
  nameWithType: IPlugger.SpecialCommands
  fullName: Quokka.PluginArch.IPlugger.SpecialCommands
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
